
library(readxl)
require(data.table)
require(curl)
library(RCurl)
library(caret)
library(lubridate)
library(xgboost)
library(randomForest)
library(glmnet)
library(rpart)
library(tree)

New_Text_Document <- read.table("C:/Users/lizou/Desktop/New folder/New Text Document.txt")

caidan <- read_csv("C:/Users/lizou/Desktop/New folder/pangudata/caidan.csv")

wushi<-out[which(out$X2==1),]

changgui<-out[-which(out$X2==1),]

small<-huge[which(huge$PARENTID %in% unique(out$ITEM_CODE)),]

unique(huge$ITEMCODE)

unique(small$ITEMCODE)

unique(out$ITEM_CODE)

small$PARENTID

small$ITEMCODE

aggregate(small$FROMTIME,by=list(small$ITEMCODE),max)

unique(small$ITEMCODE)

unique(out$ITEM_CODE)

pa_fromtime_totime_bizdate$FROMTIME_Min<-as.numeric(pa_fromtime_totime_bizdate$FROMTIME_Min)

aggregate(pa_fromtime_totime_bizdate$FROMTIME_Min,by=list(pa_fromtime_totime_bizdate$ITEMCODE),max)

pa_fromtime_totime_bizdate[which(pa_fromtime_totime_bizdate$ITEMCODE==2100448),]

pa_fromtime_totime_bizdat

unique(wushi$ITEM_CODE)

wushi<-out[which(out$X2==1),]

normalcombo<-out[-which(out$X2==1),]

wushi_data<-pa_fromtime_totime_bizdate[which(pa_fromtime_totime_bizdate$ITEMCODE%in% wushi$ITEM_CODE),]

normalcombo_data<-pa_fromtime_totime_bizdate[which(pa_fromtime_totime_bizdate$ITEMCODE %in% normalcombo$ITEM_CODE),]

summary(wushi_data$FROMTIME_Min)

wushi_data$QUANTITY_Sum

wushi_data

ready_data

by_item_wushi<-list()
for (i in (1:length(unique(wushi_data$ITEMCODE)))){
  by_item_wushi[[i]]<-wushi_data[which(wushi_data$ITEMCODE==unique(wushi_data$ITEMCODE)[i]),]
  by_item_wushi[[i]]<-by_item_wushi[[i]][order(by_item_wushi[[i]]$BIZDATE),]
}

by_item_normalcombo<-list()
for ( i in (1:length(unique(normalcombo_data$ITEMCODE)))){
  by_item_normalcombo[[i]]<-normalcombo_data[which(normalcombo_data$ITEMCODE==unique(normalcombo_data$ITEMCODE)[i]),]
by_item_normalcombo[[i]]<-by_item_normalcombo[[i]][order(by_item_normalcombo[[i]]$BIZDATE),]
}

by_item_wushi[[1]]

plot(ts(aggregate(wushi_data$Record_Count,by=list(wushi_data$BIZDATE),sum)$x))

plot(ts(by_item_wushi[[4]]$Record_Count))

for (i in (1:length(by_item_wushi))){
  tempdata<-by_item_wushi[[i]]
  tempdata$target_28<-0
  tempdata$last_2week_ratio<-0
  tempdata$last_1week_ratio<-0
  for (k in 1:(nrow(tempdata)-28)){
  tempdata$target_28[k]<-mean(tempdata$Record_Count[(k+1):(k+28)])}
  tempdata$Count_last28<-0
  for ( k in (28:nrow(tempdata))){
    tempdata$Count_last28[k]<-mean(tempdata$Record_Count[(k-27):k])
    tempdata$last_2week_ratio[k]<-mean(tempdata$Record_Count[(k-13):k])/mean(tempdata$Record_Count[(k-27):(k-14)])
    tempdata$last_1week_ratio[k]<-mean(tempdata$Record_Count[(k-6):k])/mean(tempdata$Record_Count[(k-13):(k-7)])
    
  }
  tempdata$ratio<-tempdata$target_28/tempdata$Count_last28
  by_item_wushi[[i]]<-tempdata
}

for (i in (1:length(by_item_normalcombo))){
  tempdata<-by_item_normalcombo[[i]]
  tempdata$target_28<-0
  tempdata$last_2week_ratio<-0
  tempdata$last_1week_ratio<-0
  tempdata$Count_last28<-0
  tempdata$ratio<-0
  if(nrow(tempdata)<56){
    by_item_normalcombo[[i]]<-tempdata
    next()
  }
  for (k in 1:(nrow(tempdata)-28)){
  tempdata$target_28[k]<-mean(tempdata$Record_Count[(k+1):(k+28)])
  }
  for ( k in (28:nrow(tempdata))){
    tempdata$Count_last28[k]<-mean(tempdata$Record_Count[(k-27):k])
    tempdata$last_2week_ratio[k]<-mean(tempdata$Record_Count[(k-13):k])/mean(tempdata$Record_Count[(k-27):(k-14)])
    tempdata$last_1week_ratio[k]<-mean(tempdata$Record_Count[(k-6):k])/mean(tempdata$Record_Count[(k-13):(k-7)])
  }
  tempdata$ratio<-tempdata$target_28/tempdata$Count_last28
  by_item_normalcombo[[i]]<-tempdata
}

ready_data2<-data.frame()

for (i in 1:length(by_item_wushi)){
  ready_data2<-rbind(ready_data2,by_item_wushi[[i]])
}

ready_data_normalcombo<-data.frame()

for( i in 1:length(by_item_normalcombo)){
  ready_data_normalcombo<-rbind(ready_data_normalcombo,by_item_normalcombo[[i]])
}

aggregate(wushi_data$BIZDATE,by=list(wushi_data$ITEMCODE),max)-aggregate(wushi_data$BIZDATE,by=list(wushi_data$ITEMCODE),min)

plot(ts(by_item_wushi[[15]]$ratio))

plot(ts(by_item_wushi[[8]]$Count_last28))

plot(ts(by_item_wushi[[8]]$Record_Count))

by_item_wushi[[26]]

mean(abs(ready_data2$ratio[which((ready_data2$ratio>0)&(ready_data2$ratio<5))]-1))

date_info<-data.frame()
for ( i in 1:(length(unique(ready_data$BIZDATE)))){
  g<-ready_data[which(ready_data$BIZDATE==unique(ready_data$BIZDATE)[i]),][1,]
  date_info<-rbind(date_info,g)
}

date_info<-date_info[order(date_info$BIZDATE),]

test<-merge(ready_data2,tomerge,by.x='BIZDATE',by.y = 'BIZDATE',all.y=T)

test2<-merge(ready_data_normalcombo,tomerge,by.x='BIZDATE',by.y = 'BIZDATE',all.y=T)

test2<-merge(ready_data_normalcombo,combo_info[,c('start_date','end_date','meat_ratio','DISCOUNT','CAT_Sum','PRICE_PACKAGE_Max','ITEMCODE')],by.x='ITEMCODE',by.y='ITEMCODE',all.y=T)

test2<-merge(test2,to_merge,by.x = 'BIZDATE',by.y ='BIZDATE')

combo_info[,c('BIZDATE','start_date','end_date','meat_ratio','DISCOUNT','CAT_Sum','PRICE_PACKAGE_Max','ITEMCODE')]  

tomerge<-date_info[,c('BIZDATE','holiday_28','holiday_month','temp_mean_2week','temp_mean_month')]

unique(ready_data2$BIZDATE)

test<-test[which(test$ratio<5&test$ratio>0.5),]

testdate<-as.Date(c('2017-04-15','2017-05-01','2017-05-15'))

test2<-test2[which(test2$ratio<5&test2$ratio>0.5),]

mean(abs(test2$ratio-1))

nrow(test[which(test$BIZDATE>as.Date('2017-04-01')),])

test_train<-test[which(test$BIZDATE<as.Date('2017-03-01')),]

test_test<-test[which(test$BIZDATE>as.Date('2017-04-01')),]

test_train2<-test2[which(test2$BIZDATE<as.Date('2017-03-01')),]

test_test2<-test2[which(test2$BIZDATE>as.Date('2017-04-01')),]

traincol<-c('Record_Count','Count_last28','holiday_28','holiday_month','temp_mean_2week','temp_mean_month','last_2week_ratio','last_1week_ratio')

xgtrain<-test_train[,names(test_train)%in%traincol]

xgtrain_label<-test_train[,'ratio']

xgtrain2<-test_train2[,names(test_train2)%in%traincol]

xgtrain_label2<-test_train2[,'ratio']

xgtest<-test_test[,names(test_test)%in%traincol]

xgtest2<-test_test2[,names(test_test2)%in%traincol]

tempmo<-randomForest(ratio~Record_Count+Count_last28+holiday_28+holiday_month+temp_mean_2week+temp_mean_month+last_2week_ratio+last_1week_ratio,data=test_train)

params<-list(booster = "gbtree", objective = "reg:linear", eta=0.02, gamma=0.1, max_depth=6, min_child_weight=5, subsample=0.7, colsample_bytree=0.7
)

tempmo2<-xgboost(data=as.matrix(xgtrain),label=xgtrain_label,nrounds = 400,params = params,print_every_n = 10)

unique(test_test$ITEMCODE)

mean(abs(predict(tempmo2,as.matrix(xgtest))-test_test$ratio))

mean(abs(predict(tempmo,test_test)-test_test$ratio))

params_normalcombo<-list(booster = "gbtree", objective = "reg:linear", eta=0.05, gamma=2, max_depth=6, min_child_weight=5, subsample=0.7, colsample_bytree=0.7
)
tempmo_normalcom<-xgboost(data=as.matrix(xgtrain2),label=xgtrain_label2,nrounds = 100,params = params_normalcombo,print_every_n = 10)

mean(abs(predict(tempmo_normalcom,as.matrix(xgtest2))-test_test2$ratio))
